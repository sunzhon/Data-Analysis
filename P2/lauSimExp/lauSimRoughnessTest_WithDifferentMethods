#! /bin/zsh
# sim start

# running times
if [ $# -gt 0 ]; then
    runs=$1
else
    runs=1
fi

echo "run ${runs} times"
# files
data_log_file_path=$HOME/workspace/experiment_data/datapath.log
data_log_file=$HOME/workspace/experiment_data/ExperimentDataLog.csv
echo "" > $data_log_file #create a experiment data log file 
rostopic pub --once /sim_control/floorRoughness std_msgs/Float32 "data: 0.0" # initialize the roughness to be zero


<<<<<<< HEAD
#for experiment_variable in 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 
for experiment_variable in 0.5
do
    threshold_value=100  #The threshold for phase resetting. carrying load using 6.5, normal case using 5.0
    gain_value=0.03 #GRF feedback modulation gain
    controlMethod="PhaseModulation" # PhaseReset
    experiment_class=$experiment_variable  # 0 roughness test, 1 walking speed test
    roughness="\"data: $experiment_variable\"" # 地面粗超度
    cpg_mi=0.08   # Modulation input, MI

    cmd="rostopic pub --once /sim_control/floorRoughness std_msgs/Float32 ${roughness}"
    for i in $(seq 1 $runs); do
        eval $cmd                            #publishing the roughness
        rostopic pub --once /sim_control/startSimulation std_msgs/Bool "data: true"
        eval "rosparam set /CPGMi ${cpg_mi}" # set CPG MI
        eval "rosparam set /CPGPGain ${gain_value}" #set CPG gain
        eval "rosparam set /CPGPThreshold ${threshold_value}" #set CPG threshild
        sleep 45 #22 #32 #55 
        rostopic pub --once /sim_control/stopSimulation std_msgs/Bool "data: true"
        data_path_temp=$(cat $data_log_file_path)
        echo "$controlMethod\t$data_path_temp\t$experiment_class">> $data_log_file
    done
    sleep 4
done

echo "Experiments Done!"
