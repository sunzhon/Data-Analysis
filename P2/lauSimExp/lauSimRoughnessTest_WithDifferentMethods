#! /bin/zsh
# sim start

# running times
if [ $# -gt 0 ]; then
    runs=$1
else
    runs=5
fi

echo "run ${runs} times"
# files
data_log_file_path=$HOME/workspace/experiment_data/datapath.log
data_log_file=$HOME/workspace/experiment_data/ExperimentDataLog.csv
echo "" > $data_log_file #create a experiment data log file 
rostopic pub --once /sim_control/floorRoughness std_msgs/Float32 "data: 0.0" # initialize the roughness to be zero



for experiment_variable in 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 
#for experiment_variable in 0.0  0.1 0.2 0.3; # Three type of roughness terrains
#for experiment_variable in 0.5
do
    for control_method in "apnc" #"phase_reset" "phase_modulation" "apnc";
    do

        if [ $control_method = "phase_reset" ]; then
            cpg_type=8 # phase reset
            threshold_value=0.4  #, this value is 0.4 for all case. The threshold for phase resetting. carrying load using 6.5, normal case using 5.0
            gain_value=0.0 #GRF feedback modulation gain
            echo "phase resetting"
        elif test $control_method = "phase_modulation" ; then
            cpg_type=9  # phase modulation is tegotae
            threshold_value=100  #The threshold for phase resetting. carrying load using 6.5, normal case using 5.0
            gain_value=0.03 #GRF feedback modulation gain
        elif [ $control_method = "apnc" ]; then
            cpg_type=10 # adaptive physical and neural commnications
            threshold_value=100  #The threshold for phase resetting. carrying load using 6.5, normal case using 5.0
            gain_value=0.0 #GRF feedback modulation gain
        else
            echo "CONTROL METHOD IS WRONG"
        fi

        experiment_class=$experiment_variable  # 0 roughness test, 1 walking speed test
        roughness="\"data: $experiment_variable\"" # 地面粗超度
        cpg_mi=0.08   # Modulation input, MI

        cmd="rostopic pub --once /sim_control/floorRoughness std_msgs/Float32 ${roughness}"
        for i in $(seq 1 $runs); do
            eval $cmd                            #publishing the roughness
            echo "Control method is $control_method, experiment category is : $experiment_class"
            rostopic pub --once /sim_control/startSimulation std_msgs/Bool "data: true"
            eval "rosparam set /CPGMi ${cpg_mi}" # set CPG MI
            eval "rosparam set /CPGPGain ${gain_value}" #set CPG gain
            eval "rosparam set /CPGPThreshold ${threshold_value}" #set CPG threshild
            eval "rosparam set /CPGType ${cpg_type}" # 6 is  SP (induce adaptive neural control input)
            if [ $control_method = "apnc" ]; then
                sleep 20
            eval "rosparam set /CPGType 6" # 6 is  SP (induce adaptive neural control input)
                sleep 30
            else
                sleep 50 #22 #32 #55 
            fi
            rostopic pub --once /sim_control/stopSimulation std_msgs/Bool "data: true"
            data_path_temp=$(cat $data_log_file_path)
            echo "$control_method\t$data_path_temp\t$experiment_class">> $data_log_file
        done
        sleep 4
    done
done 
echo "Experiments Done!"

