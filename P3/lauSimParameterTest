#! /bin/zsh
# sim start

# running times
if [ $# -gt 0 ]; then
    runs=$1
else
    runs=15
fi

echo "run ${runs} times"
count=0
# files
data_log_file_path=$HOME/workspace/experiment_data/datapath.log
data_log_file=$HOME/workspace/experiment_data/ExperimentDataLog.csv

echo "" > $data_log_file #create a experiment data log file 
rostopic pub --once /sim_control/floorInclination std_msgs/Float32 "data: 0.0"


for gain_value in 0.008 0.01 0.012 0.014 0.016 0.018 0.02 0.024
#for gain_value in 0.024
do
    threshold_value=100
    controlMethod='PhaseModulation'
    for i in $(seq 1 $runs); do
        rostopic pub --once /sim_control/startSimulation std_msgs/Bool "data: true"
        eval "rosparam set /CPGPGain ${gain_value}"
        eval "rosparam set /CPGPThreshold ${threshold_value}"
        sleep 40 #22 #32 #55 
        rostopic pub --once /sim_control/stopSimulation std_msgs/Bool "data: true"
        data_path_temp=$(cat $data_log_file_path)
        echo "$controlMethod\t$data_path_temp\t$gain_value">> $data_log_file
        count=`expr $count + 1`
        echo "Run times: $count"
        sleep 4
    done
done

echo "\n\n">> $data_log_file

for threshold_value in 0.0 2.0 4.0 6.0 8.0 10.0 12.0 14.0 16.0 
#for threshold_value in 10.0
do
    gain_value=0
    controlMethod='PhaseReset'
    for i in $(seq 1 $runs); do
        rostopic pub --once /sim_control/startSimulation std_msgs/Bool "data: true"
        eval "rosparam set /CPGPThreshold ${threshold_value}"
        eval "rosparam set /CPGPGain ${gain_value}"
        sleep 40 #22 #32 #55 
        rostopic pub --once /sim_control/stopSimulation std_msgs/Bool "data: true"
        data_path_temp=$(cat $data_log_file_path)
        echo "$controlMethod\t$data_path_temp\t$threshold_value">> $data_log_file
        count=`expr $count + 1`
        echo "Run times: $count"
        sleep 4
    done
done

echo "Experiments Done!"



